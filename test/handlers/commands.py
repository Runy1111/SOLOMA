from telegram import Update
from telegram.ext import ContextTypes
from analyzers.multi_level import MultiLevelAnalyzer

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    welcome_text = """
ü§ñ *–ë–æ—Ç-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —ç–∫—Å—Ç—Ä–µ–º–∏—Å—Ç—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞*

–Ø –ø—Ä–æ–≤–µ—Ä—è—é —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞:
‚Ä¢ –ù–∞—Ä—É—à–µ–Ω–∏—è –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –†–§ (–†–ö–ù)
‚Ä¢ –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤  
‚Ä¢ –≠–∫—Å—Ç—Ä–µ–º–∏—Å—Ç—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç

*–ö–æ–º–∞–Ω–¥—ã:*
/analyze <—Ç–µ–∫—Å—Ç> - –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞

–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞!
"""
    await update.message.reply_text(welcome_text, parse_mode='Markdown')

async def analyze_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /analyze"""
    user_text = ' '.join(context.args)
    
    if not user_text:
        await update.message.reply_text(
            "–£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: `/analyze –≤–∞—à —Ç–µ–∫—Å—Ç`", 
            parse_mode='Markdown'
        )
        return
    
    chat_id = update.effective_chat.id
    user_id = update.effective_user.id
    
    analyzer = MultiLevelAnalyzer()
    analysis = await analyzer.analyze(user_text, chat_id, user_id)
    
    response = f"üìä *–ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞:*\n`{user_text}`\n\n"
    response += f"*–û–±—â–∏–π —Ä–∏—Å–∫:* {analysis.risk_level.upper()}\n"
    response += f"*–û—Ü–µ–Ω–∫–∞:* {analysis.final_score:.1%}\n"
    response += f"*–¢–∏–ø –∞–Ω–∞–ª–∏–∑–∞:* {analysis.analysis_type}\n"
    
    if analysis.rkn_violations:
        response += "\n*–ù–∞—Ä—É—à–µ–Ω–∏—è –†–ö–ù:*\n"
        for violation in analysis.rkn_violations:
            response += f"‚Ä¢ {violation.domain}\n"
    
    if analysis.contextual_violations:
        response += "\n*–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è:*\n"
        for violation in analysis.contextual_violations:
            response += f"‚Ä¢ {violation.reason}\n"
    
    await update.message.reply_text(response, parse_mode='Markdown')
